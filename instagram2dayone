#!/usr/bin/env python

import os
import uuid
import shutil
import time
import datetime
import glob
import subprocess
import argparse

parser = argparse.ArgumentParser(description="Converts Instagram images into Day One entries.")
parser.add_argument("-w", "--watch_folder", type=str, required=True,
                    help="The folder to watch for Instagram photos")
parser.add_argument("-j", "--journal", type=str, required=True,
                    help="The journal to add the entry to (Journal.dayone)")
args = parser.parse_args()


watch_folder = args.watch_folder
journal_folder = args.journal
entry_folder = os.path.join(journal_folder, "entries")
photos_folder = os.path.join(journal_folder, "photos")

def is_dst():
    return True if time.localtime().tm_isdst == 1 else False

def create_entry(time_str, message, uuid):
    format_time = time.strptime(time_str, "%B_%d__%Y_at_%I%M%p")
    format_time = datetime.datetime.fromtimestamp(time.mktime(format_time))
    format_time = format_time + datetime.timedelta(hours=6 if is_dst() else 7)

    return """<?xml version=\"1.0\" encoding=\"UTF-8\"?>
<!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\">
<plist version=\"1.0\">
<dict>
    <key>Creation Date</key>
    <date>{time}</date>
    <key>Entry Text</key>
    <string>{message}</string>
    <key>Starred</key>
    <false/>
    <key>Tags</key>
    <array>
    <string>Bridget</string>
    </array>
    <key>Time Zone</key>
    <string>America/Denver</string>
    <key>UUID</key>
    <string>{uuid}</string>
</dict>
</plist>""".format(time=format_time.strftime("%FT%XZ"), message=message, uuid=uuid)


def run(name):
    text_file = name + ".txt"
    image_file = name + ".jpg"

    # Make sure there is both a text file and a image file
    if not os.path.isfile(text_file) or not os.path.isfile(image_file):
        return

    note_name = str(uuid.uuid4()).replace('-', '').upper()

    try:
        # Move the image
        shutil.move(image_file,
                    os.path.join(photos_folder, note_name + ".jpg"))

        # Create and save entry
        f_in = open(text_file, 'r')
        f_out = open(os.path.join(entry_folder, note_name + ".doentry"), 'w')

        entry_text = create_entry(name.split('/')[-1], f_in.read(), note_name)
        f_out.write(entry_text)

        # delete old caption
        os.remove(text_file)

    except IOError:
        pass
    finally:
        f_in.close()
        f_out.close()

files = glob.glob(watch_folder + '/*.jpg')

for image in files:
    run(os.path.splitext(image)[0])

if len(files) > 0:
    # Send notification when script is done
    subprocess.call(['/usr/local/bin/terminal-notifier',
                     '-title',
                     'Day One',
                     '-message',
                     '"Added {} {} from Instagram"'.format(len(files), 'picture' if len(files) == 1 else 'pictures'),
                     '-sender',
                     'com.dayoneapp.dayone'])
